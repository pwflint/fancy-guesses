<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Fancy Guesses</title>
<link>https://fancy-guesses.co/posts/beginnings.html</link>
<atom:link href="https://fancy-guesses.co/posts/beginnings.xml" rel="self" type="application/rss+xml"/>
<description>A place for playing with data science workflows</description>
<generator>quarto-1.4.555</generator>
<lastBuildDate>Fri, 10 Jan 2025 19:41:08 GMT</lastBuildDate>
<item>
  <title>Playing With Ambient</title>
  <dc:creator>Peter W. Flint</dc:creator>
  <link>https://fancy-guesses.co/posts/shattered.html</link>
  <description><![CDATA[ 




<section id="playing-with-ambient" class="level2">
<h2 class="anchored" data-anchor-id="playing-with-ambient">Playing With <code>Ambient</code></h2>
<p>This is a walkthrough set up by <a href="https://djnavarro.net/">Danielle Navarro</a>, a data scientist with some <a href="https://art.djnavarro.net/">interesting</a> generative art work. The project explores the <code>Rayshader</code> and <code>ambient</code> packages to create and render conceptual topographies on a virtual canvas, then manipulating the data to create distortions in the contours. The process utilizes a simple grid built from the <code>ambient::long-grid</code> function, then assigns a color set to a function that generates spatial noise with the <code>fracture</code>, <code>gen_simplex</code>, and <code>billow</code> functions, based on a preset seed number. This can be randomly assigned using the <code>sample</code> function.</p>
<p>The first part of generating data frames and output is fairly straightforward and provides lots of opportunities to play with various arguments in each function. The process of creating fantasy landscapes is less interesting to me, but worthwhile in the practice of exploring new functions in depth.</p>
<p>I’m am interested in both of these tool sets to see if they can be paired with spatial data objects to illustrate existing terrains.</p>
<section id="scripts-from-danielle" class="level3">
<h3 class="anchored" data-anchor-id="scripts-from-danielle">Scripts From Danielle:</h3>
<section id="set-up-canvas" class="level4">
<h4 class="anchored" data-anchor-id="set-up-canvas">Set Up Canvas</h4>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set seed seed &lt;- sample(1:100, 1)</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the intial grid</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">new_grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) { ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">long_grid</span>( <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> n), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> n) ) }</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new_grid</span>() </span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The output is a data frame with x/y coordinates</span></span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create spatial noise. This breaks the grid into fractals and assigns a color for each value. It is currently unclear to me how this works. </span></span>
<span id="cb2-2">  generate_simplex <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>) {</span>
<span id="cb2-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(seed)) {</span>
<span id="cb2-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(seed)</span>
<span id="cb2-5">  }</span>
<span id="cb2-6">  ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fracture</span>(</span>
<span id="cb2-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">noise =</span> ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>gen_simplex,</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fractal =</span> ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>billow,</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">octaves =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb2-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">freq_init =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">02</span>,</span>
<span id="cb2-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frequency =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> . <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb2-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gain_init =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gain =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> . <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb2-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x,</span>
<span id="cb2-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y</span>
<span id="cb2-16">  )</span>
<span id="cb2-17">}</span></code></pre></div>
<p>It is currently unclear to me how the <code>fracture</code> function assigns colors to the grid, whether that is within the <code>noise</code> or <code>fractal</code> arguments. The output (shown in next section) appears as a heat map with R to Y tones.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create canvas. The mutate function adds a column 'paint' to the original new_grid() data frame. </span></span>
<span id="cb3-2"></span>
<span id="cb3-3">canvas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new_grid</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paint =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_simplex</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> seed))</span>
<span id="cb3-4"></span>
<span id="cb3-5">canvas</span></code></pre></div>
</section>
<section id="create-map" class="level4">
<h4 class="anchored" data-anchor-id="create-map">Create Map</h4>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unsure about the function or necessity of this script. The object does appear in any future scripts and removing it does not affect the output.</span></span>
<span id="cb4-2">bitmap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> canvas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.array</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> paint)</span>
<span id="cb4-3">bitmap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This creates a plot using the as.array() function to map the values of `paint` on the new_grid dataframe. The image() function generates the output. The result is a 2d color rendering of the spatial noise generated by the generate_sinmplex function. </span></span>
<span id="cb4-6">canvas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.array</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> paint) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span>   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">useRaster =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://fancy-guesses.co/_assets/shattered_set3_1.png" class="img-fluid figure-img" alt="A two-dimensional &quot;heat map&quot; of noise created by applying a random seed number to a generative spatial function."></p>
<figcaption>Basic map with ambient noise function.</figcaption>
</figure>
</div>
</section>
<section id="render-3d" class="level4">
<h4 class="anchored" data-anchor-id="render-3d">Render 3D</h4>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This creates the parameters for rendering the image above in 3d. </span></span>
<span id="cb5-2">render <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(mat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shades =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zscale =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">005</span>) { </span>
<span id="cb5-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(shades)) { </span>
<span id="cb5-4">    n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(mat)) </span>
<span id="cb5-5">    shades <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hcl.colors</span>(n, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YlOrRd"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rev =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb5-6">  } </span>
<span id="cb5-7">  rayshader<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height_shade</span>( </span>
<span id="cb5-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">heightmap =</span> mat, </span>
<span id="cb5-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">texture =</span> shades </span>
<span id="cb5-10">  ) </span>
<span id="cb5-11">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> rayshader<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_shadow</span>( </span>
<span id="cb5-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shadowmap =</span> rayshader<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ray_shade</span>( </span>
<span id="cb5-13">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">heightmap =</span> mat, </span>
<span id="cb5-14">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sunaltitude =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, </span>
<span id="cb5-15">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sunangle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, </span>
<span id="cb5-16">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">multicore =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb5-17">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zscale =</span> zscale ), </span>
<span id="cb5-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_darken =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> </span>
<span id="cb5-19">  ) </span>
<span id="cb5-20">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> rayshader<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_map</span>() </span>
<span id="cb5-21">}</span>
<span id="cb5-22"></span>
<span id="cb5-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This generates the output</span></span>
<span id="cb5-24"></span>
<span id="cb5-25">canvas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.array</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> paint) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">render</span>()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://fancy-guesses.co/_assets/shattered_set3_2.png" class="img-fluid figure-img" alt="A three-dimensional rendered image of the previous heat map."></p>
<figcaption>The rendered output using `Rayshader`</figcaption>
</figure>
</div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sea_level creates a datum that cuts off at the median value of the 'paint' column</span></span>
<span id="cb6-2">sea_level <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(canvas<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>paint)</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The sea_level datum can be added to the canvas to create islands. This creates an 'islaands' column and sets its value to either sea_level or paint, whichever is higher. </span></span>
<span id="cb6-5">canvas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-6">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb6-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">islands =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(</span>
<span id="cb6-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">condition =</span> paint <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> sea_level,</span>
<span id="cb6-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true =</span> sea_level, </span>
<span id="cb6-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">false =</span> paint</span>
<span id="cb6-11">    )</span>
<span id="cb6-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.array</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> islands) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">render</span>()</span></code></pre></div>
<p><img src="https://fancy-guesses.co/_assets/shattered_set3_3.png" class="img-fluid quarto-figure quarto-figure-center" alt="The rendered map with a ‘sea level’ applied."> You could stop here and play with various arguments for a little while to see how each function works.</p>
</section>
<section id="getting-weird" class="level4">
<h4 class="anchored" data-anchor-id="getting-weird">Getting Weird</h4>
<p>This manipulates the spatial noise generator by combining the primary noise functions in <code>ambient::fracture</code> with <code>ambient::gen_worley</code>. The result feels like sub-ducted geography as opposed to volcanic.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">generate_fancy_noise <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>) { </span>
<span id="cb7-2">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(seed)) { </span>
<span id="cb7-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(seed) </span>
<span id="cb7-4">  } </span>
<span id="cb7-5">  z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fracture</span>(</span>
<span id="cb7-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">noise =</span> ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>gen_worley, </span>
<span id="cb7-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fractal =</span> ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>billow, </span>
<span id="cb7-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">octaves =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">freq_init =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb7-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frequency =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> . <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb7-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gain_init =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb7-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gain =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> . <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, </span>
<span id="cb7-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"distance2"</span>, </span>
<span id="cb7-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, </span>
<span id="cb7-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y </span>
<span id="cb7-15">  ) </span>
<span id="cb7-16">  ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fracture</span>( </span>
<span id="cb7-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">noise =</span> ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>gen_simplex, </span>
<span id="cb7-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fractal =</span> ambient<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>billow, </span>
<span id="cb7-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">octaves =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb7-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">freq_init =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">02</span>, </span>
<span id="cb7-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frequency =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> . <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb7-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gain_init =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb7-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gain =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> . <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, </span>
<span id="cb7-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, </span>
<span id="cb7-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z </span>
<span id="cb7-26">  ) </span>
<span id="cb7-27">}</span>
<span id="cb7-28"></span>
<span id="cb7-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new_grid</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>( </span>
<span id="cb7-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_fancy_noise</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> seed), </span>
<span id="cb7-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">islands =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>( </span>
<span id="cb7-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">condition =</span> height <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(height), </span>
<span id="cb7-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(height), </span>
<span id="cb7-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">false =</span> height </span>
<span id="cb7-35">    ) </span>
<span id="cb7-36">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.array</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> islands) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">render</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zscale =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">01</span>) </span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://fancy-guesses.co/_assets/shattered_set3_4.png" class="img-fluid figure-img" alt="An image of the rendered 3d map distorted into bands of ridges."></p>
<figcaption>The ‘shattered’ landscape.</figcaption>
</figure>
</div>
<p>Additional scripts are in the project folder and utilize some interesting functions such as <strong>curl fields</strong> and <strong>curl transformations</strong> that use a <code>discretize()</code> function to create a terracing effect. Much of the output looks like code going through puberty, awkward and unclear as to its outcome. Additoinally, there are some examples of creating different color palettes than the default <code>YlOrRd</code> being used by the native functions in the code. My final output looked like this:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://fancy-guesses.co/_assets/shattered_set3_10.png" class="img-fluid figure-img" alt="An image of the final 3d map after several series of distortions."></p>
<figcaption>‘Queered’ geography.</figcaption>
</figure>
</div>
</section>
</section>
</section>
<section id="resources" class="level2">
<h2 class="anchored" data-anchor-id="resources">Resources</h2>
<ul>
<li><a href="https://blog.djnavarro.net/posts/2023-03-13_shattered-landscapes/">Full text</a> of the tutorial.</li>
<li><a href="https://blog.djnavarro.net/posts/2023-03-13_shattered-landscapes/islands.R">Full script</a> for creating islands.</li>
</ul>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ol type="1">
<li>Navarro, Danielle. 2023.&nbsp;“Shattered Landscapes.”&nbsp;March 13, 2023.&nbsp;<a href="https://blog.djnavarro.net/posts/2023-03-13_shattered-landscapes" class="uri">https://blog.djnavarro.net/posts/2023-03-13_shattered-landscapes</a>.</li>
</ol>
</section>

 ]]></description>
  <category>spatial</category>
  <category>generativeRt</category>
  <guid>https://fancy-guesses.co/posts/shattered.html</guid>
  <pubDate>Fri, 10 Jan 2025 19:41:08 GMT</pubDate>
</item>
</channel>
</rss>
